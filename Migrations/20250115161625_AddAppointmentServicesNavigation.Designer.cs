// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace hilarys_hair_care.Migrations
{
    [DbContext(typeof(HillarysHairCareDbContext))]
    [Migration("20250115161625_AddAppointmentServicesNavigation")]
    partial class AddAppointmentServicesNavigation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllDay")
                        .HasColumnType("boolean");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StylistId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StylistId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllDay = false,
                            CustomerId = 1,
                            End = new DateTime(2025, 1, 15, 11, 0, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2025, 1, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            StylistId = 1,
                            Title = "Jane Doe--Emily Stone"
                        },
                        new
                        {
                            Id = 2,
                            AllDay = false,
                            CustomerId = 2,
                            End = new DateTime(2025, 1, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2025, 1, 15, 11, 0, 0, 0, DateTimeKind.Utc),
                            StylistId = 2,
                            Title = "John Smith--James Bond"
                        },
                        new
                        {
                            Id = 3,
                            AllDay = false,
                            CustomerId = 3,
                            End = new DateTime(2025, 1, 15, 13, 0, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2025, 1, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            StylistId = 3,
                            Title = "Alice Johnson--Sarah Connor"
                        },
                        new
                        {
                            Id = 4,
                            AllDay = false,
                            CustomerId = 4,
                            End = new DateTime(2025, 1, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2025, 1, 16, 9, 0, 0, 0, DateTimeKind.Utc),
                            StylistId = 1,
                            Title = "Bob Williams--Emily Stone"
                        },
                        new
                        {
                            Id = 5,
                            AllDay = false,
                            CustomerId = 3,
                            End = new DateTime(2025, 1, 16, 11, 0, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2025, 1, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            StylistId = 2,
                            Title = "Alice Johnson--James Bond"
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.AppointmentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AppointmentServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 3,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 4,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 5,
                            AppointmentId = 5,
                            ServiceId = 4
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jane.doe@example.com",
                            FirstName = "Jane",
                            LastName = "Doe",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john.smith@example.com",
                            FirstName = "John",
                            LastName = "Smith",
                            PhoneNumber = "555-5678"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            PhoneNumber = "555-3456"
                        },
                        new
                        {
                            Id = 4,
                            Email = "bob.williams@example.com",
                            FirstName = "Bob",
                            LastName = "Williams",
                            PhoneNumber = "555-7890"
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Haircut",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Shampoo",
                            Price = 15.00m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Coloring",
                            Price = 75.00m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Blow Dry",
                            Price = 30.00m
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "emily.stone@example.com",
                            FirstName = "Emily",
                            IsActive = true,
                            LastName = "Stone",
                            PhoneNumber = "555-8765"
                        },
                        new
                        {
                            Id = 2,
                            Email = "james.bond@example.com",
                            FirstName = "James",
                            IsActive = true,
                            LastName = "Bond",
                            PhoneNumber = "555-4321"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sarah.connor@example.com",
                            FirstName = "Sarah",
                            IsActive = true,
                            LastName = "Connor",
                            PhoneNumber = "555-6543"
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.HasOne("HillarysHairCare.Models.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHairCare.Models.Stylist", "Stylist")
                        .WithMany("Appointments")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("HillarysHairCare.Models.AppointmentService", b =>
                {
                    b.HasOne("HillarysHairCare.Models.Appointment", "Appointment")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHairCare.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.Navigation("AppointmentServices");
                });

            modelBuilder.Entity("HillarysHairCare.Models.Customer", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HillarysHairCare.Models.Stylist", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
